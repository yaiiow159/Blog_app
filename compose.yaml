version: '3.7'
services:
  test-blog:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blog_app
    external_links:
      - redis
      - zookeeper
      - kafka
    restart: on-failure
    deploy:
      replicas: 1
    ports:
      - "9090:9090"
    depends_on:
      - redis
      - zookeeper
      - kafka
    networks:
      - blog_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 3
#  mysql:
#    image: mysql:8.0.30
#    container_name: mysql
#    restart: on-failure
#    volumes:
#      - mysql_data:/var/lib/mysql
#      - mysql_conf:/etc/mysql/conf.d
#    deploy:
#      replicas: 1
#    environment:
#      - MYSQL_DATABASE=blog_app
#      - MYSQL_ROOT_PASSWORD=Timmy@870728
#      - MYSQL_ROOT_USER=root
#      - MYSQL_ROOT_HOST=%
#    ports:
#      - "3305:3306"
#    networks:
#      - blog_network
#    healthcheck:
#      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#      interval: 10s
#      retries: 3
#      timeout: 5s
  redis:
    image: redis:7.2.1-alpine
    container_name: redis
    restart: on-failure
    volumes:
      - redis_conf:/etc/redis/redis.conf
    deploy:
      replicas: 1
    ports:
      - "6379:6379"
    networks:
      - blog_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/data
      - zookeeper_conf:/conf
    networks:
      - blog_network
  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "email-notification-topic:3:1,review-notification-topic:3:1"
    volumes:
      - kafka_data:/var/lib/kafka
    depends_on:
      - zookeeper
    networks:
      - blog_network
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--describe"]
      interval: 10s
      timeout: 5s
      retries: 3
networks:
  blog_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1
          aux_addresses:
            kafka: 172.18.0.2
            zookeeper: 172.18.0.3
            redis: 172.18.0.4
            blog_app: 172.18.0.6
volumes:
  redis_conf:
  zookeeper_data:
  zookeeper_conf:
  kafka_data: